input-view {
  match: PlayerActionConcept(this) {
    to-input: ChoosePlayer(action)
  }
  message {
    if (action.chooser.isBixby) {
      if (action.chooser.currentPlayer == 1) {
        template-macro(PLEASE_SAY_BIXBY)
      } if (action.chooser.currentPlayer == action.chooser.numPlayer) {
        template-macro(PLEASE_SAY_BIXBY_LAST)
      } else {
        template("#{macro('PLEASE_SAY_BIXBY_PARAMS', action.chooser)}")
      }
    } else {
      template-macro(RETRY_PLEASE_SAY_BIXBY)
    }
  }
  render {
    selection-of (action.chooser) {
      where-each () {
        compound-card {
          content {
            title-area {
              halign (Center)
              slot2 {
                single-line {
                  text ("#{macro('SHOW_GAME_STATUS_TITLE')}")
                }
              }
            }
            divider
            paragraph {
              style(Detail_L)
              value {
                template("#{macro('SHOW_GAME_STATUS', action.chooser)}")
              }
            }
            single-line {
              text {
                style (Detail_L_Soft)
                value {
                  template ("#{macro('SHOW_GAME_CHOOSE_RATIO', action.chooser)}")
                }
              }
            }
            single-line {
              text {
                color (Amber)
                style (Detail_M)
                value {
                  template ("#{macro('PROGRESS')}")
                }
              }
            }
            progress-bar(action.chooser.progress)
          }
        }
      }
    }
  }
  conversation-drivers {
    conversation-driver {
      template-macro (SAY_BIXBY)
    }
  }
}
